"use strict";

import {
  OHLCV,
  batchCandlesWithCustomInterval,
  batchCandles,
  IOHLCV,
  batchCandlesJSON,
} from "../src";

// From Binance
const btc_usdt_1m: OHLCV[] = [
  [1589177580000, 8695.81, 8700.0, 8695.41, 8698.29, 20.87075],
  [1589177640000, 8697.93, 8698.91, 8687.9, 8695.01, 41.313954],
  [1589177700000, 8696.02, 8709.53, 8691.46, 8708.06, 71.01759], // 1 full candle
  [1589177760000, 8708.35, 8721.21, 8706.53, 8721.21, 75.892621],
  [1589177820000, 8721.21, 8721.21, 8709.35, 8713.14, 72.308842],
  [1589177880000, 8713.14, 8714.63, 8707.43, 8710.2, 25.581651],
  [1589177940000, 8710.21, 8718.87, 8710.21, 8711.9, 51.244036],
  [1589178000000, 8711.89, 8711.89, 8703.2, 8704.39, 26.062579], // 2 full candle
  [1589178060000, 8704.39, 8711.47, 8704.38, 8708.11, 41.123627],
  [1589178120000, 8708.11, 8710.0, 8707.23, 8707.33, 9.777135],
  [1589178180000, 8707.32, 8716.25, 8705.0, 8713.38, 44.299947],
  [1589178240000, 8713.23, 8719.43, 8710.57, 8717.09, 59.07193],
  [1589178300000, 8717.09, 8721.0, 8710.03, 8720.13, 26.420557], // 3 full candle
  [1589178360000, 8719.7, 8730.32, 8718.25, 8724.5, 51.527443],
  [1589178420000, 8726.75, 8732.23, 8718.29, 8723.77, 55.485704],
  [1589178480000, 8722.17, 8725.06, 8718.32, 8718.53, 23.427228],
  [1589178540000, 8718.53, 8721.81, 8716.76, 8720.0, 25.014032],
  [1589178600000, 8719.53, 8724.19, 8715.0, 8717.38, 23.258556], // 4 full candle
  [1589178660000, 8717.57, 8717.84, 8709.05, 8710.92, 21.163949],
  [1589178720000, 8710.92, 8711.66, 8700.0, 8706.24, 42.016462],
  [1589178780000, 8706.24, 8712.18, 8704.68, 8710.8, 23.806239],
  [1589178840000, 8710.53, 8719.98, 8710.0, 8717.76, 29.303668],
  [1589178900000, 8717.76, 8717.77, 8707.89, 8709.86, 42.120656], // 5 full candle
  [1589178960000, 8709.86, 8714.88, 8709.86, 8710.06, 39.543405],
  [1589179020000, 8710.06, 8711.75, 8701.65, 8703.08, 36.669774],
  [1589179080000, 8703.04, 8707.08, 8701.06, 8702.9, 30.41817],
  [1589179140000, 8702.18, 8702.76, 8695.0, 8700.95, 69.636751],
  [1589179200000, 8700.95, 8700.96, 8692.83, 8694.83, 25.879202], // 6 open candle
  [1589179260000, 8695.0, 8699.7, 8692.64, 8695.98, 15.013254],
  [1589179320000, 8695.98, 8698.0, 8695.08, 8695.08, 17.997163],
];

// From Binance
const btc_usdt_5m: OHLCV[] = [
  [1589178600000, 8719.53, 8724.19, 8700.0, 8717.76, 139.54887399999998],
];

test("Candle Convert array CustomInterval", () => {
  const intervalFunction = (time: number) => {
    if (time < 1589178300000) {
      return 1589177580000;
    } else {
      return 1589178300000;
    }
  };

  let result = batchCandlesWithCustomInterval(
    btc_usdt_1m,
    intervalFunction,
    true
  );

  expect(result[0]).toEqual([
    1589177580000, 8695.81, 8721.21, 8687.9, 8717.09, 538.564662,
  ]);

  expect(result[1]).toEqual([
    1589178300000, 8717.09, 8732.23, 8692.64, 8695.08, 598.7022129999999,
  ]);
});

test("Candle Convert 1m to 5m", () => {
  const result = batchCandles(btc_usdt_1m, 60, 5 * 60);

  expect(result[4]).toEqual(btc_usdt_5m[0]);

  expect(result).toHaveLength(6);
});

test("Candle Convert 1m to 5m#withOpenCandles", () => {
  const result = batchCandles(btc_usdt_1m, 60, 5 * 60, true);

  expect(result[4]).toEqual(btc_usdt_5m[0]);

  expect(result[6][0]).toEqual(1589179200000);

  expect(result).toHaveLength(7);
});

test("Candle Convert 1m to 5m with missing values", () => {
  const incompleteArray = [...btc_usdt_1m];

  incompleteArray.splice(6, 1);
  incompleteArray.splice(13, 1);
  incompleteArray.splice(22, 1);

  const result = batchCandles(incompleteArray, 60, 5 * 60);

  expect(incompleteArray.length).toBeLessThan(btc_usdt_1m.length);
  expect(result).toHaveLength(6);
});

const candle4h: OHLCV[] = [
  [
    1588204800000, 215.42830423, 226.35514441, 214.31875445, 225.57612125,
    12046.65930005,
  ],
  [
    1588219200000, 225.54010584, 227.13385486, 216.3234, 220.36815671,
    14595.39307772,
  ],
  [
    1588233600000, 220.35179971, 220.805, 202.19405314, 211.74182454,
    15729.63045946,
  ],
  [
    1588248000000, 211.74, 213.1836997, 206.35780003, 208.22505329,
    8436.43548563,
  ],
  [
    1588262400000, 208.05120001, 212.68949134, 202.0834746, 211.5,
    15277.35560464,
  ],
  [
    1588276800000, 211.50302713, 212.29, 205.29320752, 206.35436145,
    7487.72388672,
  ],
];

test("Candle Convert 1Day", () => {
  let result = batchCandles(candle4h, 4 * 60 * 60, 24 * 60 * 60);

  expect(result[0]).toEqual([
    1588204800000, 215.42830423, 227.13385486, 202.0834746, 206.35436145,
    73573.19781422001,
  ]);
});

const link_btc_1m: Array<IOHLCV> = [
  {
    time: 1563625680000,
    open: 0.00024824,
    high: 0.00024851,
    low: 0.00024798,
    close: 0.00024831,
    volume: 2264,
  },
  {
    time: 1563625740000,
    open: 0.00024817,
    high: 0.00024832,
    low: 0.00024795,
    close: 0.00024828,
    volume: 3145,
  },
  {
    time: 1563625800000,
    open: 0.00024824,
    high: 0.00024831,
    low: 0.00024789,
    close: 0.00024825,
    volume: 2956,
  },
  {
    time: 1563625860000,
    open: 0.00024829,
    high: 0.00024841,
    low: 0.0002479,
    close: 0.00024841,
    volume: 3742,
  },
  {
    time: 1563625920000,
    open: 0.00024831,
    high: 0.0002488,
    low: 0.00024771,
    close: 0.00024843,
    volume: 8768,
  },
  {
    time: 1563625980000,
    open: 0.00024829,
    high: 0.00024868,
    low: 0.00024773,
    close: 0.00024849,
    volume: 7555,
  },
  {
    time: 1563626100000,
    open: 0.00024894,
    high: 0.00024935,
    low: 0.00024873,
    close: 0.00024935,
    volume: 4309,
  },
  {
    time: 1563626040000,
    open: 0.00024857,
    high: 0.00024903,
    low: 0.00024828,
    close: 0.00024903,
    volume: 5071,
  },
];

test("Candle Convert json 2 min", () => {
  let result = batchCandlesJSON(link_btc_1m, 60, 120);

  expect(result[0]).toEqual({
    close: 0.00024828,
    high: 0.00024851,
    low: 0.00024795,
    open: 0.00024824,
    time: 1563625680000,
    volume: 5409,
  });

  expect(result[1]).toEqual({
    close: 0.00024841,
    high: 0.00024841,
    low: 0.00024789,
    open: 0.00024824,
    time: 1563625800000,
    volume: 6698,
  });
});
