"use strict";

import CConverter, { IOHLCV, batchCandleArray, OHLCV } from "../src/index";

// From Binance
const btc_usdt_1m: OHLCV[] = [
  [1589177580000, 8695.81000000, 8700.00000000, 8695.41000000, 8698.29000000, 20.87075000],
  [1589177640000, 8697.93000000, 8698.91000000, 8687.90000000, 8695.01000000, 41.31395400],
  [1589177700000, 8696.02000000, 8709.53000000, 8691.46000000, 8708.06000000, 71.01759000], // 1 full candle
  [1589177760000, 8708.35000000, 8721.21000000, 8706.53000000, 8721.21000000, 75.89262100],
  [1589177820000, 8721.21000000, 8721.21000000, 8709.35000000, 8713.14000000, 72.30884200],
  [1589177880000, 8713.14000000, 8714.63000000, 8707.43000000, 8710.20000000, 25.58165100],
  [1589177940000, 8710.21000000, 8718.87000000, 8710.21000000, 8711.90000000, 51.24403600],
  [1589178000000, 8711.89000000, 8711.89000000, 8703.20000000, 8704.39000000, 26.06257900], // 2 full candle
  [1589178060000, 8704.39000000, 8711.47000000, 8704.38000000, 8708.11000000, 41.12362700],
  [1589178120000, 8708.11000000, 8710.00000000, 8707.23000000, 8707.33000000, 9.77713500],
  [1589178180000, 8707.32000000, 8716.25000000, 8705.00000000, 8713.38000000, 44.29994700],
  [1589178240000, 8713.23000000, 8719.43000000, 8710.57000000, 8717.09000000, 59.07193000],
  [1589178300000, 8717.09000000, 8721.00000000, 8710.03000000, 8720.13000000, 26.42055700], // 3 full candle
  [1589178360000, 8719.70000000, 8730.32000000, 8718.25000000, 8724.50000000, 51.52744300],
  [1589178420000, 8726.75000000, 8732.23000000, 8718.29000000, 8723.77000000, 55.48570400],
  [1589178480000, 8722.17000000, 8725.06000000, 8718.32000000, 8718.53000000, 23.427228000],
  [1589178540000, 8718.53000000, 8721.81000000, 8716.76000000, 8720.00000000, 25.014032000],
  [1589178600000, 8719.53000000, 8724.19000000, 8715.00000000, 8717.38000000, 23.25855600], // 4 full candle
  [1589178660000, 8717.57000000, 8717.84000000, 8709.05000000, 8710.92000000, 21.16394900],
  [1589178720000, 8710.92000000, 8711.66000000, 8700.00000000, 8706.24000000, 42.016462000],
  [1589178780000, 8706.24000000, 8712.18000000, 8704.68000000, 8710.80000000, 23.80623900],
  [1589178840000, 8710.53000000, 8719.98000000, 8710.00000000, 8717.76000000, 29.30366800],
  [1589178900000, 8717.76000000, 8717.77000000, 8707.89000000, 8709.86000000, 42.12065600], // 5 full candle
  [1589178960000, 8709.86000000, 8714.88000000, 8709.86000000, 8710.06000000, 39.54340500],
  [1589179020000, 8710.06000000, 8711.75000000, 8701.65000000, 8703.08000000, 36.669774000],
  [1589179080000, 8703.04000000, 8707.08000000, 8701.06000000, 8702.90000000, 30.41817000],
  [1589179140000, 8702.18000000, 8702.76000000, 8695.00000000, 8700.95000000, 69.63675100],
  [1589179200000, 8700.95000000, 8700.96000000, 8692.83000000, 8694.83000000, 25.87920200], // 6 open candle
  [1589179260000, 8695.00000000, 8699.70000000, 8692.64000000, 8695.98000000, 15.01325400],
  [1589179320000, 8695.98000000, 8698.00000000, 8695.08000000, 8695.08000000, 17.99716300]];

// From Binance
const btc_usdt_5m: OHLCV[] = [
  [1589178600000, 8719.53000000, 8724.19000000, 8700.00000000, 8717.76000000, 139.54887399999998]
]

test("Candle Convert 1m to 5m", () => {
  const result = batchCandleArray(btc_usdt_1m, 60, 5 * 60);

  expect(result[4]).toEqual(btc_usdt_5m[0]);

  expect(result).toHaveLength(6);
});

test("Candle Convert 1m to 5m#withOpenCandles", () => {
  const result = batchCandleArray(btc_usdt_1m, 60, 5 * 60, true);

  expect(result[4]).toEqual(btc_usdt_5m[0]);

  expect(result[6][0]).toEqual(1589179200000);

  expect(result).toHaveLength(7);
});



test("Candle Convert 1m to 5m with missing values", () => {

  const incompleteArray = [...btc_usdt_1m];

  incompleteArray.splice(6, 1);
  incompleteArray.splice(13, 1);
  incompleteArray.splice(22, 1);

  const result = batchCandleArray(incompleteArray, 60, 5 * 60);

  expect(incompleteArray.length).toBeLessThan(btc_usdt_1m.length);
  expect(result).toHaveLength(6);
});


const candle4h: OHLCV[] = [
  [1588204800000, 215.42830423, 226.35514441, 214.31875445, 225.57612125, 12046.65930005],
  [1588219200000, 225.54010584, 227.13385486, 216.3234, 220.36815671, 14595.39307772],
  [1588233600000, 220.35179971, 220.805, 202.19405314, 211.74182454, 15729.63045946],
  [1588248000000, 211.74, 213.1836997, 206.35780003, 208.22505329, 8436.43548563],
  [1588262400000, 208.05120001, 212.68949134, 202.0834746, 211.5, 15277.35560464],
  [1588276800000, 211.50302713, 212.29, 205.29320752, 206.35436145, 7487.72388672],
]

test("Candle Convert 1Day", () => {
  let result = batchCandleArray(candle4h, 4 * 60 * 60, 24 * 60 * 60);

  expect(result[0]).toEqual([
    1588204800000,
    215.42830423,
    227.13385486,
    202.0834746,
    206.35436145,
    73573.19781422001,
  ]);


});



const link_btc_1m: Array<IOHLCV> = [
  {
    time: 1563625680000,
    open: 0.00024824,
    high: 0.00024851,
    low: 0.00024798,
    close: 0.00024831,
    volume: 2264
  },
  {
    time: 1563625740000,
    open: 0.00024817,
    high: 0.00024832,
    low: 0.00024795,
    close: 0.00024828,
    volume: 3145
  },
  {
    time: 1563625800000,
    open: 0.00024824,
    high: 0.00024831,
    low: 0.00024789,
    close: 0.00024825,
    volume: 2956
  },
  {
    time: 1563625860000,
    open: 0.00024829,
    high: 0.00024841,
    low: 0.0002479,
    close: 0.00024841,
    volume: 3742
  },
  {
    time: 1563625920000,
    open: 0.00024831,
    high: 0.0002488,
    low: 0.00024771,
    close: 0.00024843,
    volume: 8768
  },
  {
    time: 1563625980000,
    open: 0.00024829,
    high: 0.00024868,
    low: 0.00024773,
    close: 0.00024849,
    volume: 7555
  },
  {
    time: 1563626100000,
    open: 0.00024894,
    high: 0.00024935,
    low: 0.00024873,
    close: 0.00024935,
    volume: 4309
  },
  {
    time: 1563626040000,
    open: 0.00024857,
    high: 0.00024903,
    low: 0.00024828,
    close: 0.00024903,
    volume: 5071
  }
];

test("Candle Convert json 2 min", () => {
  let result = CConverter.json(link_btc_1m, 60, 120);

  expect(result[0]).toEqual({
    close: 0.00024828,
    high: 0.00024851,
    low: 0.00024795,
    open: 0.00024824,
    time: 1563625680000,
    volume: 5409
  });

  expect(result[1]).toEqual({
    close: 0.00024841,
    high: 0.00024841,
    low: 0.00024789,
    open: 0.00024824,
    time: 1563625800000,
    volume: 6698
  });
});
